var Type{{.Type.GetName}} = {{with $.PackageFor "GLib"}}{{.}}.{{end}}ToType[{{.Type.GetName}}](uint64(C.{{.Type.GetTypeInitFunctionName}}()))

type {{.Type.GetName}} struct {
	_ structs.HostLayout
	{{with parent .Type}}{{with $.PackageFor .GetNamespace}}{{.}}.{{end}}{{.GetName}}{{end}}
	{{with .InstanceSize}}_ [{{.}}]byte{{end}}
}

func (obj *{{.Type.GetName}}) c() *C.{{.Type | cTypeName}} {
	return (*C.{{.Type | cTypeName}})(unsafe.Pointer(obj))
}

func (obj *{{.Type.GetName}}) As{{.Type | cTypeName}}() *{{.Type.GetName}} {
	return obj
}

{{range $_, $method := .Type.GetMethods}}
	{{$.Generate "func" $.Type $method}}
{{end}}
